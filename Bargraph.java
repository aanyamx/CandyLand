
/**
 * the import statements
 */
import javax.swing.JFrame;
import javax.swing.WindowConstants;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 * Responsible for reading in 2 arrays (3 topics and 3 percentages) and displays
 * them on a bar graph.
 */
public class Bargraph
  extends JFrame
{
  /**
   * an array of the percentages that will be displayed
   */
  private double[] allPercentages = new double[3];
  /**
   * the topics that the user was quizzed on (generated by ChatGPT)
   */
  private String[] allTopics      = new String[3];

  /**
   * Constructor that sets the attributes of the bargraph.
   * 
   * @param appTitle
   *          passed to the frame constructor, the name of the graph
   * @param perc
   *          the subjects that will be displayed
   * @param top
   *          the percentages that will be displayed
   */
  public Bargraph(String appTitle, double[] perc, String[] top)
  {
    super(appTitle);

    try
    {
      for (int idx = 0; idx < perc.length; idx++)
      {
        allPercentages[idx] = perc[idx];
      }

      for (int idx = 0; idx < top.length; idx++)
      {
        allTopics[idx] = top[idx];
      }
    }
    catch (Exception e)
    {
      System.out.print("");
    }

    // initialize dataset
    CategoryDataset dataset = createDataset();

    // initialize chart
    JFreeChart barchart = ChartFactory.createBarChart(
      "Statistics", // Title
      "Topics", // x axis
      "Percentage", // y axis
      dataset,
      PlotOrientation.VERTICAL, // Vertical bargraph
      true,
      true,
      false);

    ChartPanel panel = new ChartPanel(barchart);
    setContentPane(panel);
  }


  /**
   * Creates a dataset to be passed to the bargraph.
   * 
   * @return dataset of topics
   */
  public CategoryDataset createDataset()
  {
    DefaultCategoryDataset dataset = new DefaultCategoryDataset();

    // Issue: if the topic is null, remove it altogether
    for (int i = 0; i < allTopics.length; i++)
    {
      if (allTopics[i] == null)
      {
        allTopics[i] = "";
      }
    }

    for (int i = 0; i < allTopics.length; i++)
    {
      dataset.addValue(allPercentages[i], allTopics[i], "Subject");
    }

    return dataset;
  }


  /**
   * Creates frame and displays the bargraph.
   * 
   * @param topic
   *          the subjects the user was quizzed on
   */
  public void display(double[] topic)
  {
    Bargraph bar = new Bargraph("Statistics", topic, allTopics); // Creates
                                                                 // bargraph
    bar.setSize(800, 400);
    bar.setLocationRelativeTo(null); // Centered
    bar.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
    bar.setVisible(true);
  }

}
